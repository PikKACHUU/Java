package task4a.newpackage;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Frame;
import java.awt.Graphics;
import java.awt.Point;
import java.awt.Toolkit;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.Arrays;
import java.util.Random;
import java.util.Scanner;

public class window extends Frame {
    int totalScore = 0;
    Dimension screenSize;
     public Dice[] dice = new Dice[4];
     int diceCounter = 0;
     int x = 0;
    int num;
//Constructor
   
   public window(){
        
       while(true){
    
           int b = 0;
   int c = 2;
   int d =3;
   int f = 4;
   int[] value =dicevalue(4,6);
   init();
   for(int g =0;g<value.length;g++){  
       addDice(new Point(x,250),new Dimension(150,150),value[g]);
        x+=150; } 
   for(int k =1;k>0;k--){
   for(int a=0;a<value.length;a++){
   for(int j=3;j>a;j--){
   if(value[a]==value[j])
       b+=1;
   }     
          }
      if(b==1||b==2){
           totalScore = totalScore+c;
          System.out.println("\nYou got "+ c+" points.");}
      else if(b==3){
          totalScore = totalScore+d;
          System.out.println("\nYou got "+ d+" points.");}
      else if(b==6){
         totalScore = totalScore+f;
          System.out.println("\nYou got "+ f +" points.");}
      else{
          System.out.println("\nYou got zero in this game.Hope you can achieve higher mark in the next chance.");}}

   
   boolean judgeEnd = JUDGE(totalScore);
try{if(judgeEnd==true){
    x=0;     
    continue;}
else if(judgeEnd==false){
    break;}
}
catch(Exception e){System.out.println("\nPlease enter in right answer.");

}

}
       
       
       

    }

    public void addDice(Point location, Dimension size,int index){
        Dice dices = new Dice(location, size, index);    //note the additional argument: screenSize
        if(diceCounter < dice.length){
            dice[diceCounter] = dices;       
            diceCounter++;
            num = diceCounter;
            if(diceCounter==dice.length){
             diceCounter=0;   }
        }
        
            
           
        
    }

    public void init(){
        this.setVisible(true);
        this.setLayout(null);
        screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        this.setSize(600, 600);
        
        this.setBackground(Color.blue);
        
        this.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent windowEvent){
               System.exit(0);
            }
        });
       
    }

    

    public void paint(Graphics graphics){
        super.paint(graphics);
        for(int i = 0; i < num; i++){
            dice[i].paintDice(graphics, this);
        }
        
    }

    public int[] dicevalue(int length,int max){
     Random r = new Random();
    int [] value = new int[length];
    for(int a = length-1;a>=0;a--){
    value [a] = r.nextInt(max)+1;
    }
    System.out.println("The output is: "+Arrays.toString(value));
    return value;
}
    

public boolean JUDGE(int totalscore){
Scanner judge = new Scanner(System.in);
System.out.println("\nPlay again? (Y/N)");
while(true){
String Judge = judge.nextLine();
if(Judge.toUpperCase().equals("Y")){
repaint();
    return true;}
else if(Judge.toUpperCase().equals("N")){
System.out.println("\nYour total score in this game is "+totalscore);
    System.out.println("\nGame over.");
return false;}
else {
System.out.println("\nPlease enter in Y or N");
continue;}
}   
}
}

